Dependencias: Spring Web, Spring Data JPA, H2 Database


1- Crear Proyecto y poner dependencias necesarias según tecnologías
2- Definir el modelo de datos
3- Crear capa Repository
4- Logica en la capa de negocio 
5- Implementar el controlador (@RestController, @Autowired, hacer mapeos)





Objetivos: Hoteles: Manejar la información de hoteles y disponibilidades.


MICROSERVICIO HOTEL: 
Gestiona la informacion de los hoteles en la base dedatos de la agencia de viajes.
Atributos: idHotel, nombre, categoria, precio, disponible.
Repository
Hotel Controller: 
Endpoint GET /hoteles: Devuelve la lista de hoteles disponibles (disponible = true).
Endpoint GET /hoteles/{nombre}: Devuelve los detalles de un hotel específico por nombre.



GET --> Recuperar todos los hoteles disponibles (http://localhost:8080/hoteles)
GET --> Recuperar un hotel por nombre (http://localhost:8080/hoteles/{nombre})

















MICROSERVICIO DE VUELOS: Atributos: idVuelo, compañia, fechaVuelo, precio, plazasDisponibles.
Repository: Configuración para consultas de vuelos.
Endpoint GET /vuelos?plazas={cantidad}: Devuelve vuelos con plazas disponibles suficientes.
Endpoint PUT /vuelos/{idVuelo}?plazas={reservadas}: Actualiza plazas disponibles tras una reserva.


MICROSERVICIO DE RESERVAS: Atributos: idReserva, nombreCliente, dni, idHotel, idVuelo.
Repository: 
Endpoint POST /reservas: Registra una reserva e interactúa con VueloController para actualizar plazas.
Endpoint GET /reservas/hotel/{nombreHotel}: Devuelve reservas para un hotel específico, interactuando con HotelController para obtener el idHotel.


Hay que hacer tres microservicios: Hotel, Vuelos, Reservas
Una bbdd con tres tablas

Documentar el proyecto: Swagger
hacer un leeme con las url de cada microservicio 
